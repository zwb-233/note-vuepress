import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as t,o as l}from"./app-De620kUC.js";const e="/note-vuepress/assets/DBS-J3nCcj0p.png",r="/note-vuepress/assets/DBAS-DLAqq8hD.png",o={};function i(m,s){return l(),a("div",null,s[0]||(s[0]=[t('<h1 id="导言" tabindex="-1"><a class="header-anchor" href="#导言"><span><strong>导言</strong></span></a></h1><h2 id="0-数据库历史分析和离散数学内容" tabindex="-1"><a class="header-anchor" href="#0-数据库历史分析和离散数学内容"><span>0. 数据库历史分析和离散数学内容</span></a></h2><h3 id="1数据库中的基本定义" tabindex="-1"><a class="header-anchor" href="#1数据库中的基本定义"><span>1.数据库中的基本定义</span></a></h3><ul><li><p><strong>DB</strong>   是数据库的<strong>英文简称</strong>,对于目前而言,没有明确的定义,下面是部分人认为的定义: <em>1.</em> <strong>长期存储在计算机内的</strong>,<strong>有组织的</strong>,<strong>可共享的</strong>数据集合 <em>2.</em> <strong>相互关联</strong>的数据存储体 <em>3.</em> 有组织的数据集合,<strong>其结构能反映数据间的自然关系</strong>,能够满足多种应用 </p></li><li><p><strong>DBMS</strong>   数据库管理系统是一个操控和管理数据库的大型系统,它由一组计算机程序组成,是位于用户和操作系统之间的一层数据库管理软件 </p></li><li><p><strong>DBS</strong>   是数据库系统的<strong>英文简称</strong>,一般由硬件,软件,数据库和用户4部分组成 <em>1.</em> 硬件:是数据库依赖的<strong>物理设备</strong>,包括输入输出设备,运算器,控制器和存储器 <em>2.</em> 软件:基本的软件<strong>操作系统</strong>,所有软件都需要在操作系统的支持下运作,除此之外,还有<strong>数据库管理系统</strong>,<strong>如果没有的话</strong>,<strong>也不能称作数据库系统</strong>,同时为了开发数据库管理系统,还需要有各种语言及其<strong>编译系统</strong><em>3.</em> 数据库:是需要管理的信息的集合,包括两部分内容:<strong>一类是所有应用需要的工作数据的集合</strong>,存放在物理数据库中,是数据库的主体;<strong>另一类是存放数据字典中各级模式的描述信息</strong>,主要包括所有数据的结构名,意义,描述定义,存储格式,完整性约束和使用权限等信息,因此也被称为&quot;描述数据库&quot;,可理解为存储数据库中表格的定义和用户的权限等内容 <em>4.</em> 用户:主要包括<strong>管理和开发人员</strong>,<strong>终端用户</strong><br><strong>管理和开发人员</strong>:具体包括<strong>数据库管理人员</strong>,<strong>系统分析员</strong>和<strong>应用程序员</strong></p><ul><li>数据库管理人员负责管理整个数据库的建立,管理,维护和协调工作,高水平的数据库管理小组通常需要许多方面的专家</li><li>系统分析员负责应用系统的需求分析和规范说明，需与用户和DBA结合确定系统设计</li><li>应用程序员负责应用系统的程序设计</li></ul></li></ul><p>  <strong>终端用户</strong>:各种操作人员，可以不懂程序，但必须懂业务，会操作     <img src="'+e+'" alt="图片" loading="lazy"></p><ul><li><strong>DBAS</strong>   是指数据库应用程序,由数据库系统及其应用程序组成的即在数据库系统环境下建立起来的为某种应用服务的软硬件的集合   <img src="'+r+'" alt="图片" loading="lazy"></li></ul><h3 id="2-实体-联系数据模型-e-r模型" tabindex="-1"><a class="header-anchor" href="#2-实体-联系数据模型-e-r模型"><span>2. 实体-联系数据模型(E-R模型)</span></a></h3><ul><li><p>将现实世界中,客观存在的可区分的个体转化为<strong>实体</strong>,描述每个实体的主要特征,将具有相同特征的实体放一起,称为实体集;将<strong>实体集</strong>之间的联系(依赖关系)寻找出来,作为联系,不仅要关心实体集间联系,还要关心实体集内实体的联系。</p></li><li><p>根据联系的实体的数目可分为<strong>二元联系和多元联系</strong>。二元联系为<strong>两个实体集间的联系</strong>，主要有一对一联系、一对多联系和多对多联系,另存在一种自反联系即实体集自己和自己联系；多元联系为<strong>联系的实体集个数大于3的联系</strong></p></li><li><p>E-R图:数据库设计的中间步骤,易于向数据模型转换</p><ul><li>方形框：实体集的名字,表示一个实体集</li><li>菱形框：联系,两段箭头上写数目表示联系的实体集的数目(1个为1,两个为n,即一对多表示为1个箭头菱形两个箭头)</li><li>椭圆框：实体集的属性。属性为本问题下仅与该实体集有关的<strong>需要描述</strong>的<strong>不可再分</strong>的性质</li><li>绘制步骤:1.对问题分析抽象,寻找需提取的实体集及属性;2.找出实体集间的联系;3.找到关联实体集的属性;4.绘制E-R图,由局部到全局将图画完；</li></ul></li><li><p>历史上常用的结构模型:</p><ul><li>层次模型:最早的模型,以树状(层次)结构表示实体集和实体集之间的联系,一个结点只能有0个或1个双亲结点存在.联系通过指针实现,一般使用邻接法和连接法物理实现,邻接法是在连续的物理空间中存储记录,由根记录开始自上而下,自左到右存储记录;连接法是通过指针实现记录间的联系.</li><li>网状模型:与层次模型不同的是,允许结点有0个或两个以上的双亲结点的存在</li><li>关系模型:目前主要采用的模型,关系模型把每一张表称作一个关系,每个表中的每一个列都被称为一个属性,每一行被称作元组,每个元组用关键字标识.因此关系模式可表述为:</li></ul><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>R</mi><mo stretchy="false">(</mo><mi>U</mi><mo separator="true">,</mo><mi>D</mi><mo separator="true">,</mo><mi>D</mi><mi>O</mi><mi>M</mi><mo separator="true">,</mo><mi>I</mi><mo separator="true">,</mo><mo>∑</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex"> R(U,D,DOM,I,\\sum) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.6em;vertical-align:-0.55em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.10903em;">OM</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-symbol large-op" style="position:relative;top:0em;">∑</span><span class="mclose">)</span></span></span></span></span></p><p>R为关系名(表名),U为组成关系的全部属性(列)集合,D为U属性的取值值域,DOM为属性列到域的映射即:<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mi>O</mi><mi>M</mi><mo>:</mo><mi>U</mi><mo>−</mo><mo>&gt;</mo><mi>D</mi></mrow><annotation encoding="application/x-tex">DOM:U -&gt;D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal" style="margin-right:0.10903em;">OM</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="mord">−</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>,每个属性所有可能取值的集合构成D.</p><ul><li>面向对象模型:新兴模型,通过计算机语言的设计思维,设计数据库,将一个对象的属性和方法封装成一个实体,使对象封装起来,这种使数据与操作封装在一起的建模方法,有利于程序的模块化,可以提高系统的可维护性和易修改性.</li></ul></li></ul><h3 id="3-泛关系模型的设计思路" tabindex="-1"><a class="header-anchor" href="#3-泛关系模型的设计思路"><span>3. 泛关系模型的设计思路</span></a></h3><ul><li>设计方式:通过将关系模型各表转化成泛式，来消除依赖造成的影响。</li><li>理论依据 <ul><li>依赖</li><li>码的定义</li><li>泛式</li></ul></li></ul><h2 id="1-sql命令行基础语句与基本类型" tabindex="-1"><a class="header-anchor" href="#1-sql命令行基础语句与基本类型"><span>1. SQL命令行基础语句与基本类型</span></a></h2><h2 id="2-视图" tabindex="-1"><a class="header-anchor" href="#2-视图"><span>2. 视图</span></a></h2><h2 id="3-索引" tabindex="-1"><a class="header-anchor" href="#3-索引"><span>3. 索引</span></a></h2><h2 id="4-安全性" tabindex="-1"><a class="header-anchor" href="#4-安全性"><span>4. 安全性</span></a></h2><h2 id="5-sql函数" tabindex="-1"><a class="header-anchor" href="#5-sql函数"><span>5. SQL函数</span></a></h2><ul><li>sum函数是对所有列的值求和。 <ul><li>如果没查到数据，sum的值为null</li><li>如果查到的数据这一列值为null，sum的值为null</li><li>如果查到数据有null，也有不是null的，那么sum的值为所有非空值的和</li></ul></li></ul><h2 id="6-触发器" tabindex="-1"><a class="header-anchor" href="#6-触发器"><span>6. 触发器</span></a></h2><h2 id="与其它语言内容" tabindex="-1"><a class="header-anchor" href="#与其它语言内容"><span>与其它语言内容</span></a></h2>',18)]))}const h=n(o,[["render",i],["__file","主要展示.html.vue"]]),c=JSON.parse('{"path":"/note/MySQL/%E4%B8%BB%E8%A6%81%E5%B1%95%E7%A4%BA.html","title":"导言","lang":"zh-CN","frontmatter":{"description":"导言 0. 数据库历史分析和离散数学内容 1.数据库中的基本定义 DB 是数据库的英文简称,对于目前而言,没有明确的定义,下面是部分人认为的定义: 1. 长期存储在计算机内的,有组织的,可共享的数据集合 2. 相互关联的数据存储体 3. 有组织的数据集合,其结构能反映数据间的自然关系,能够满足多种应用 DBMS 数据库管理系统是一个操控和管理数据库的大...","head":[["meta",{"property":"og:url","content":"https://zwb233.github.io/note-vuepress/note-vuepress/note/MySQL/%E4%B8%BB%E8%A6%81%E5%B1%95%E7%A4%BA.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"导言"}],["meta",{"property":"og:description","content":"导言 0. 数据库历史分析和离散数学内容 1.数据库中的基本定义 DB 是数据库的英文简称,对于目前而言,没有明确的定义,下面是部分人认为的定义: 1. 长期存储在计算机内的,有组织的,可共享的数据集合 2. 相互关联的数据存储体 3. 有组织的数据集合,其结构能反映数据间的自然关系,能够满足多种应用 DBMS 数据库管理系统是一个操控和管理数据库的大..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"导言\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"12a\\",\\"url\\":\\"/note-vuepress/intro.html\\"}]}"]]},"headers":[{"level":2,"title":"0. 数据库历史分析和离散数学内容","slug":"0-数据库历史分析和离散数学内容","link":"#0-数据库历史分析和离散数学内容","children":[{"level":3,"title":"1.数据库中的基本定义","slug":"1数据库中的基本定义","link":"#1数据库中的基本定义","children":[]},{"level":3,"title":"2. 实体-联系数据模型(E-R模型)","slug":"2-实体-联系数据模型-e-r模型","link":"#2-实体-联系数据模型-e-r模型","children":[]},{"level":3,"title":"3. 泛关系模型的设计思路","slug":"3-泛关系模型的设计思路","link":"#3-泛关系模型的设计思路","children":[]}]},{"level":2,"title":"1. SQL命令行基础语句与基本类型","slug":"1-sql命令行基础语句与基本类型","link":"#1-sql命令行基础语句与基本类型","children":[]},{"level":2,"title":"2. 视图","slug":"2-视图","link":"#2-视图","children":[]},{"level":2,"title":"3. 索引","slug":"3-索引","link":"#3-索引","children":[]},{"level":2,"title":"4. 安全性","slug":"4-安全性","link":"#4-安全性","children":[]},{"level":2,"title":"5. SQL函数","slug":"5-sql函数","link":"#5-sql函数","children":[]},{"level":2,"title":"6. 触发器","slug":"6-触发器","link":"#6-触发器","children":[]},{"level":2,"title":"与其它语言内容","slug":"与其它语言内容","link":"#与其它语言内容","children":[]}],"readingTime":{"minutes":5.59,"words":1678},"filePathRelative":"note/MySQL/主要展示.md","excerpt":"\\n<h2>0. 数据库历史分析和离散数学内容</h2>\\n<h3>1.数据库中的基本定义</h3>\\n<ul>\\n<li>\\n<p><strong>DB</strong>\\n  是数据库的<strong>英文简称</strong>,对于目前而言,没有明确的定义,下面是部分人认为的定义:\\n<em>1.</em> <strong>长期存储在计算机内的</strong>,<strong>有组织的</strong>,<strong>可共享的</strong>数据集合\\n<em>2.</em> <strong>相互关联</strong>的数据存储体\\n<em>3.</em> 有组织的数据集合,<strong>其结构能反映数据间的自然关系</strong>,能够满足多种应用\\n<br></p>\\n</li>\\n<li>\\n<p><strong>DBMS</strong>\\n  数据库管理系统是一个操控和管理数据库的大型系统,它由一组计算机程序组成,是位于用户和操作系统之间的一层数据库管理软件\\n<br></p>\\n</li>\\n<li>\\n<p><strong>DBS</strong>\\n  是数据库系统的<strong>英文简称</strong>,一般由硬件,软件,数据库和用户4部分组成\\n<em>1.</em> 硬件:是数据库依赖的<strong>物理设备</strong>,包括输入输出设备,运算器,控制器和存储器\\n<em>2.</em> 软件:基本的软件<strong>操作系统</strong>,所有软件都需要在操作系统的支持下运作,除此之外,还有<strong>数据库管理系统</strong>,<strong>如果没有的话</strong>,<strong>也不能称作数据库系统</strong>,同时为了开发数据库管理系统,还需要有各种语言及其<strong>编译系统</strong>\\n<em>3.</em> 数据库:是需要管理的信息的集合,包括两部分内容:<strong>一类是所有应用需要的工作数据的集合</strong>,存放在物理数据库中,是数据库的主体;<strong>另一类是存放数据字典中各级模式的描述信息</strong>,主要包括所有数据的结构名,意义,描述定义,存储格式,完整性约束和使用权限等信息,因此也被称为\\"描述数据库\\",可理解为存储数据库中表格的定义和用户的权限等内容\\n<em>4.</em> 用户:主要包括<strong>管理和开发人员</strong>,<strong>终端用户</strong><br>\\n<strong>管理和开发人员</strong>:具体包括<strong>数据库管理人员</strong>,<strong>系统分析员</strong>和<strong>应用程序员</strong></p>\\n<ul>\\n<li>数据库管理人员负责管理整个数据库的建立,管理,维护和协调工作,高水平的数据库管理小组通常需要许多方面的专家</li>\\n<li>系统分析员负责应用系统的需求分析和规范说明，需与用户和DBA结合确定系统设计</li>\\n<li>应用程序员负责应用系统的程序设计</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{h as comp,c as data};
